name: Deploy

on:
  push:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      stage:
        description: 'Deployment stage'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

concurrency:
  group: deploy-${{ github.ref }}-${{ inputs.stage || (github.ref == 'refs/heads/main' && 'prod' || 'dev') }}
  cancel-in-progress: false

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  deploy:
    name: Deploy to ${{ inputs.stage || (github.ref == 'refs/heads/main' && 'prod' || 'dev') }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.stage || (github.ref == 'refs/heads/main' && 'prod' || 'dev') }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.14.0'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run build

      - name: Deploy to ${{ inputs.stage || (github.ref == 'refs/heads/main' && 'prod' || 'dev') }}
        run: |
          STAGE=${{ inputs.stage || (github.ref == 'refs/heads/main' && 'prod' || 'dev') }}
          if [ "$STAGE" = "prod" ]; then
            pnpm run deploy:prod
          else
            pnpm run deploy:dev
          fi